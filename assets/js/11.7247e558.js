(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{384:function(v,_,s){"use strict";s.r(_);var e=s(45),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"bec-的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bec-的概念"}},[v._v("#")]),v._v(" BEC 的概念")]),v._v(" "),s("p",[v._v("bfc 是一个独立块级格式化上下文，它是一个独立的渲染区域，它内部的布局不会受外界影响的变化，同样内部的布局也不会影响外界")]),v._v(" "),s("p",[v._v("如何触发：")]),v._v(" "),s("ul",[s("li",[v._v("float 不为 none")]),v._v(" "),s("li",[v._v("overflow 值不为 visible")]),v._v(" "),s("li",[v._v("display 值为：inline-block、tab-cell")]),v._v(" "),s("li",[v._v("position 的值为 absolute 或 fixed")])]),v._v(" "),s("p",[v._v("bfc的应用：")]),v._v(" "),s("ul",[s("li",[v._v("防止 "),s("code",[v._v("margin")]),v._v(" 塌陷（防止相邻元素的 margin 合并）")]),v._v(" "),s("li",[v._v("清除内部浮动")]),v._v(" "),s("li",[v._v("自适应两栏布局")]),v._v(" "),s("li",[v._v("防止元素被浮动元素的覆盖")])]),v._v(" "),s("br"),v._v(" "),s("h2",{attrs:{id:"如何清除浮动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何清除浮动"}},[v._v("#")]),v._v(" 如何清除浮动")]),v._v(" "),s("ul",[s("li",[v._v("使用 "),s("code",[v._v("clear：both")])]),v._v(" "),s("li",[v._v("在父标签最后插入一个块标签：添加 "),s("code",[v._v("clear：both")])]),v._v(" "),s("li",[v._v("在父元素添加一个after伪元素，添加 "),s("code",[v._v("clear：both")])]),v._v(" "),s("li",[v._v("利用 "),s("code",[v._v("overflow")])])]),v._v(" "),s("br"),v._v(" "),s("h2",{attrs:{id:"rem、em、px和vw有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem、em、px和vw有何区别"}},[v._v("#")]),v._v(" rem、em、px和vw有何区别？")]),v._v(" "),s("h3",{attrs:{id:"px"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px"}},[v._v("#")]),v._v(" px")]),v._v(" "),s("p",[v._v("相对长度单位，相对于屏幕显示器分辨率而言，谷歌识别字体最小为 12px")]),v._v(" "),s("h3",{attrs:{id:"em"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#em"}},[v._v("#")]),v._v(" em")]),v._v(" "),s("p",[v._v("相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。")]),v._v(" "),s("p",[v._v("em 值有以下特点：")]),v._v(" "),s("p",[v._v("em 值并不固定，如果元素本身不设置字体大小，em 会继承父级元素的字体大小。")]),v._v(" "),s("p",[v._v("如果使用 em 的话，有个好的建议，就是将 body 的 font-size 设置成 62.5%，也就是 "),s("code",[v._v("16px * 62.5% = 10px")]),v._v(" 。这样的话 "),s("code",[v._v("1em = 10px")]),v._v(" ，方便我们计算。")]),v._v(" "),s("h3",{attrs:{id:"rem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[v._v("#")]),v._v(" rem")]),v._v(" "),s("p",[v._v("rem 是 CSS3 新增的一个相对单位，使用 rem 为元素设定字体大小时，仍然是相对大小，始终相对 HTML 根元素，这样有个很大的优点就是使用 rem 后不会受到对象内文本字体尺寸的影响，而且只需要改变根元素就能改变所有的字体大小")]),v._v(" "),s("h3",{attrs:{id:"vw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vw"}},[v._v("#")]),v._v(" vw")]),v._v(" "),s("p",[v._v("vw 是可视区宽度单位。将屏幕分成 100 份，1vw 等于可视区宽度的百分之一。")]),v._v(" "),s("br"),v._v(" "),s("h2",{attrs:{id:"less、sass、stylus-的特点和区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#less、sass、stylus-的特点和区别"}},[v._v("#")]),v._v(" less、sass、stylus 的特点和区别？")]),v._v(" "),s("p",[v._v("优点：")]),v._v(" "),s("ul",[s("li",[v._v("可以把反复使用的值设置为变量")]),v._v(" "),s("li",[v._v("可以嵌套书写样式、省去了写父级类名或者父标签，而且父子节点关系一目了解")]),v._v(" "),s("li",[v._v("可以传变量，可以导入样式文件")]),v._v(" "),s("li",[v._v("可以继承、混入(当某段 CSS 经常需要在多个元素中使用时，可以为这些共用的 CSS 定义一个 Mixin)")]),v._v(" "),s("li",[v._v("可以使用 @if-@else、@for 函数")])]),v._v(" "),s("p",[v._v("区别：")]),v._v(" "),s("ul",[s("li",[v._v("关于变量在 Less 和 Sass 中的唯一区别就是 Less 用 @，Sass 用 $。")]),v._v(" "),s("li",[v._v("Less 是基于 JavaScript，是在客户端处理的。")]),v._v(" "),s("li",[v._v("Sass 是基于 Ruby 的，是在服务器端处理的。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);