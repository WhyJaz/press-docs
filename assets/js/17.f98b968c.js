(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{382:function(s,n,t){"use strict";t.r(n);var a=t(45),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"for-in-和-for-of的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和-for-of的区别"}},[s._v("#")]),s._v(" for in 和 for of的区别？")]),s._v(" "),t("ul",[t("li",[s._v("for in：会遍历对象的所有的可枚举属性，包括原型上的，一般用于遍历对象的 key，如果不想遍历原型方法和属性的话，可以在循环内部用 "),t("code",[s._v("hasOwnPropery")]),s._v(" 方法判断一下某属性是否是该对象的实例属性")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" myObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n　　  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("（myObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasOwnProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n　　　　console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n　　  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("for of：适用于遍历数组字符串，只会遍历数组的元素值，不会遍历数组原型上的属性")])]),s._v(" "),t("p",[s._v("区别：两者都能遍历数组和字符串，但是 for in 可以遍历对象")]),s._v(" "),t("br"),s._v(" "),t("h2",{attrs:{id:"break、continue、return的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#break、continue、return的区别"}},[s._v("#")]),s._v(" break、continue、return的区别？")]),s._v(" "),t("ul",[t("li",[s._v("continue：跳过本次循环，本次循环后面的语句不执行了，接着执行下一次循环")]),s._v(" "),t("li",[s._v("break：结束距离最近的的循环，继续执行循环后面的代码(forEach、map、filter等函数里不可使用)")]),s._v(" "),t("li",[s._v("return：结束最近所在函数（无论是在多少层的嵌套下）的运行")])]),s._v(" "),t("p",[s._v("注意：return 只能出现在函数内，在其他任何地方出现均会报错")]),s._v(" "),t("br"),s._v(" "),t("h2",{attrs:{id:"map-与-parseint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map-与-parseint"}},[s._v("#")]),s._v(" map 与 parseInt")]),s._v(" "),t("p",[s._v("相关参考文档：")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parseInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1, NaN, NaN, 10]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// map函数接收一个函数，这个函数接收三个参数（value,index,arr）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所以上面的等价于parseInt(value, index, arr)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* \n* parseInt函数接收2个参数，\n* 第一个参数是要解析的字符串string，第二参数表示要解析的数字的基数，基于2-36间，如果该参数小于 2 或者大于 36，\n* 则 parseInt() 将返回 NaN。当第二参数是0时，默认是10进制\n*/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// string 以 "0x" 开头，parseInt() 会把 string 的其余部分解析为十六进制的整数')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// string 以 1 ~ 9 的数字开头，parseInt() 将把它解析为十进制的整数。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(parseInt(1, 0)); // 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(parseInt(2, 1)); // NaN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(parseInt(3, 2)); // NaN，因为2进制只可能出现0或1，不可能是3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(parseInt(10, 3)); // 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将3进制的10，转化为10进制就是 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// parseInt('123', 5) // 38")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将5进制的123，转化为10进制就是 3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// parseInt(123, 2) // 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当传递第二个参数时，被解析的字符串只要有大于等于这个参数时，后面的就不会解析了，所以这里只解析了第一个1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// parseInt(223, 2) // NaN")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);